#!/bin/bash

# variables to define in env:
# LOCATION: weather location

# reload shell
alias reload="source \$HOME/.dotfiles/zshrc"

# tmux with conf
alias tmux="tmux -f \$HOME/.dotfiles/conf/tmux.conf"
alias ta="tmux attach"

# dirs
alias ...='../..'
alias ....='../../..'
alias .....='../../../..'
alias ......='../../../../..'

# ls
alias ls='ls -h --color=auto -N'
alias ll='ls -lh'
alias la='ls -lah'
alias l='ls -CF'

# color stuff
alias ip='ip -color=auto'

# gpg
alias gpglist='gpg --list-keys --keyid-format long'

# package managers
if type pacman > /dev/null 2>&1; then
  alias pacu='sudo pacman -Syy'
  alias pacs='sudo pacman -Sy'
  alias pacr='sudo pacman -Rs'
  alias pacf='sudo pacman -F'
  alias pacupg='sudo pacman -Syyu'
  alias paru='paru -Syu --skipreview'
  alias pacclean='sudo pacman -Rns $(pacman -Qtdq)'
elif type apt > /dev/null 2>&1; then
  alias update='sudo apt update'
  alias upgrade='sudo apt upgrade -V'
  alias purge='sudo apt purge'
  alias install='sudo apt install'
  alias dist-upgrade='sudo apt-get dist-upgrade -V'
  alias clean='sudo orphaner; sudo apt-get autoremove --purge; sudo apt-get clean; sudo apt-get autoclean'
# todo: centos
fi

# weather
w1() {
  if [ $# -eq 0 ]; then
    curl wttr.in/"$LOCATION"
  else
    curl wttr.in/"$1"
  fi
}

w2() {
  if [ $# -eq 0 ]; then
    curl v2.wttr.in/"$LOCATION"
  else
    curl v2.wttr.in/"$1"
  fi
}

# cheat.sh cheatsheets
cheat() {
  curl cheat.sh/"$1"
}

# background connections
sb() { ssh -fN "$1" ; }

# clear background connections
kill_sbs() {
  for ssh_control_path in "$HOME/.ssh/control"*;
  do
    control_name=$(basename "$ssh_control_path")
    ssh -S "$ssh_control_path" -O exit "$control_name" &> /dev/null
  done
}

sshmount() {
  if [ -z "$2" ]; then
    remote_path=/
  else
    remote_path="$2"
  fi

  [ -d "$HOME/$1" ] && [[ -n $(l -A "$HOME/$1") ]] && echo Directory \'"$1"\' exists and is not empty. Aborting. && return 1

  [ ! -d "$HOME/$1" ] && mkdir "$HOME/$1"

  sshfs "$1":"$remote_path" "$HOME"/"$1" -o kernel_cache,auto_cache,reconnect,no_readahead
}

alias myip='curl -s https://ipinfo.io/ip'
alias myipgeo='curl -s https://ipapi.co/$(curl -s https://ipinfo.io/ip)/json'

tere() {
    local result
    result=$(command tere "$@")
    # shellcheck disable=SC2164
    [ -n "$result" ] && cd -- "$result"
}

# thefuck config
eval "$(thefuck --alias)"

# GPG password prompt
GPG_TTY=$(tty)
export GPG_TTY

# fa
